@page "/admin/orders/delete"
@rendermode InteractiveServer

@inject IOrderService OrderService
@inject IHeaderService HeaderService
@using SSSKLv2.Data
@inject NavigationManager NavigationManager
@using SSSKLv2.Data.DAL.Exceptions
@using SSSKLv2.Services.Interfaces
@using Microsoft.AspNetCore.Authorization
@using SSSKLv2.Components.Account

@attribute [Authorize(Policy = Policies.Admin)]

<PageTitle>SSSKLv2 | Order Verwijderen</PageTitle>

<div class="row crud-form-header">
    <div class="col-9 title-container">
        <h1>Verwijderen</h1>
    </div>
    <div class="col-3 text-end back-container">
        <a class="btn btn-secondary" href="/admin/orders"><i class="bi bi-arrow-left"></i></a>
    </div>
</div>

<div class="card">
    <div class="card-body">
        <h4 class="card-title">Bestelling</h4>
            <hr/>
            @if (order is null)
            {
                <p><em>Loading...</em></p>
            }
            else
            {
                <dl class="row">
                    <dt class="col-sm-2">Datum</dt>
                    <dd class="col-sm-10">@order.CreatedOn.ToString("dd/MM/yyyy")</dd>
                </dl>
                <dl class="row">
                    <dt class="col-sm-2">Gebruiker</dt>
                    <dd class="col-sm-10">@order.User.Name @order.User.Surname</dd>
                </dl>
                <dl class="row">
                    <dt class="col-sm-2">Product</dt>
                    <dd class="col-sm-10">@order.ProductNaam</dd>
                </dl>
                <dl class="row">
                    <dt class="col-sm-2">Hoeveelheid</dt>
                    <dd class="col-sm-10">@order.Amount</dd>
                </dl>
                <dl class="row">
                    <dt class="col-sm-2">Kosten</dt>
                    <dd class="col-sm-10">@order.Paid.ToString("C")</dd>
                </dl>
                <EditForm method="post" Model="order" OnValidSubmit="DeleteOrder" FormName="delete" Enhance>
                    <button type="submit" class="btn btn-danger" disabled="@(order is null)">Verwijderen</button>
                </EditForm>
            }
    </div>
</div>

@code {
    Order? order;

    [SupplyParameterFromQuery]
    public Guid Id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        await GetData();
    }

    public async Task GetData()
    {
        try
        {
            order = await OrderService.GetOrderById(Id);

        }
        catch (NotFoundException)
        {
            NavigationManager.NavigateTo("notfound");
        }
    }

    public async Task DeleteOrder()
    {
        try
        {
            await OrderService.DeleteOrder(Id);
            HeaderService.NotifyHeaderChanged();
            NavigationManager.NavigateTo("/admin/orders");
        }
        catch (NotFoundException)
        {
            NavigationManager.NavigateTo("notfound");
        }
    }
}
