@page "/admin/products/create"
@inject SSSKLv2.Data.ApplicationDbContext DB
@using SSSKLv2.Data
@using Microsoft.AspNetCore.Authorization
@using SSSKLv2.Components.Account
@inject NavigationManager NavigationManager

@attribute [Authorize(Policy = Policies.Admin)]

<PageTitle>SSSKLv2 | Aanmaken</PageTitle>

<div class="row crud-form-header">
    <div class="col-9 title-container">
        <h1>Aanmaken</h1>
    </div>
    <div class="col-3 text-end back-container">
        <a class="btn btn-lg btn-secondary" href="/admin/products"><i class="bi bi-arrow-left"></i></a>
    </div>
</div>
<hr/>

<div class="card">
    <div class="card-body">
        <h5 class="card-title">Product</h5>
        <hr/>
        <div class="row">
            <div class="col-md-4">
                <EditForm method="post" Model="Product" OnValidSubmit="AddProduct" FormName="create" Enhance>
                    <DataAnnotationsValidator />
                    <ValidationSummary class="text-danger" />
                    <div class="mb-3">
                        <label for="name" class="form-label">Naam:</label> 
                        <InputText id="name" @bind-Value="Product.Name" class="form-control" /> 
                        <ValidationMessage For="() => Product.Name" class="text-danger" /> 
                    </div>        
                    <div class="mb-3">
                        <label for="description" class="form-label">Beschrijving:</label> 
                        <InputText id="description" @bind-Value="Product.Description" class="form-control" /> 
                        <ValidationMessage For="() => Product.Description" class="text-danger" /> 
                    </div>        
                    <div class="mb-3">
                        <label for="price" class="form-label">Prijs:</label>
                        <div class="input-group">
                            <span class="input-group-text">€</span>
                            <InputNumber id="price" @bind-Value="Product.Price" class="form-control" /> 
                        </div>
                        <ValidationMessage For="() => Product.Price" class="text-danger" /> 
                    </div>        
                    <div class="mb-3">
                        <label for="stock" class="form-label">Voorraad:</label> 
                        <InputNumber id="stock" @bind-Value="Product.Stock" class="form-control" /> 
                        <ValidationMessage For="() => Product.Stock" class="text-danger" /> 
                    </div>        
                    <button type="submit" class="btn btn-primary">Aanmaken</button>
                </EditForm>
            </div>
        </div>
    </div>
</div>

@code {

    [SupplyParameterFromForm]
    public Product Product { get; set; } = new();

    // To protect from overposting attacks, see https://aka.ms/RazorPagesCRUD
    public async Task AddProduct()
    {
        Product.Id = Guid.NewGuid();
        DB.Product.Add(Product);
        await DB.SaveChangesAsync();
        NavigationManager.NavigateTo("/admin/products");
    }
}
