@page "/leaderboard/livedisplay/{productId}"
@rendermode InteractiveServer

@implements IDisposable
@implements IAsyncDisposable
@inject IApplicationUserService UserService;
@inject IOrderService OrderService;
@using SSSKLv2.Components.Layout
@using SSSKLv2.Data
@using SSSKLv2.Services
@using SSSKLv2.Services.Interfaces
@layout EmptyLayout;

<PageTitle>SSSKLv2 | Live Leaderboard</PageTitle>

@if (Leaderboard.Count() > 0)
{
    <div class="row vh-100 align-items-center">
        <div class="col-6">
            <h3>@Leaderboard.First().ProductName Leaderboard</h3>
            <div class="table-responsive">
                <table class="table table-striped">
                    <thead>
                    <tr>
                        <th scope="col">Plek</th>
                        <th scope="col">Naam</th>
                        <th scope="col">Hoeveelheid</th>
                    </tr>
                    </thead>
                    <tbody>
                    @foreach (var l in Leaderboard)
                    {
                        <tr>
                            <td>#@l.Position</td>
                            <td>@l.FullName</td>
                            <td>@l.Amount</td>
                        </tr>
                    }
                    </tbody>
                </table>
            </div>
        </div>
        <div class="col-6 text-center h-100 row align-items-center">
            <div class="row h-25">
                <div></div>
                <div class="col-12">
                    <h1 class="display-4">#1 @Leaderboard.First().FullName</h1>
                    <h1 class="display-1">@Leaderboard.First().Amount</h1>
                </div>
            </div>
            <div class="row h-75">
                <div></div>
                <div class="col-12">
                    <h3>Laatste Bestellingen</h3>
                    <div class="table-responsive">
                        <table class="table table-striped">
                            <thead>
                            <tr>
                                <th scope="col">Tijd</th>
                                <th scope="col">Naam</th>
                                <th scope="col">Product</th>
                                <th scope="col">Hoeveelheid</th>
                            </tr>
                            </thead>
                            <tbody>
                            @foreach (var o in LatestOrders)
                            {
                                <tr>
                                    <td>@o.CreatedOn.ToString("HH:mm")</td>
                                    <td>@o.User.Name @o.User.Surname.First()</td>
                                    <td>@o.ProductNaam</td>
                                    <td>@o.Amount</td>
                                </tr>
                            }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
}
else
{
    <div class="text-center">
        <h1 class="display-1">Er zijn nog geen bestellingen gedaan.</h1>
    </div>
}


@code {
    [Parameter]
    public string? ProductId { get; set; }
    
    System.Threading.Timer timer;
    
    public IEnumerable<LeaderboardEntry> Leaderboard { get; set; } = new List<LeaderboardEntry>();
    public IEnumerable<Order> LatestOrders { get; set; } = new List<Order>();
    
    protected override async Task OnInitializedAsync()
    {
        await GetData();
        timer = new System.Threading.Timer(async _ =>
        {
            await GetData();
            await InvokeAsync(StateHasChanged);
        }, null, 0, 15000);
    }

    private async Task GetData()
    {
        if (ProductId != null) Leaderboard = await UserService.Get12HourlyLeaderboard(Guid.Parse(ProductId));
        LatestOrders = await OrderService.GetLatestOrders();
    }

    public void Dispose()
    {
        timer.Dispose();
    }

    public async ValueTask DisposeAsync()
    {
        await timer.DisposeAsync();
    }
}