@page "/admin/topups/create"
@rendermode InteractiveServer

@attribute [Authorize(Policy = Policies.Admin)]

@inject IApplicationUserService ApplicationUserService;
@inject ITopUpService TopUpService;
@inject IHeaderService HeaderService;
@using SSSKLv2.Data
@using Microsoft.AspNetCore.Authorization
@using SSSKLv2.Components.Account
@using SSSKLv2.Services.Interfaces
@using System.ComponentModel.DataAnnotations
@using System.ComponentModel
@inject NavigationManager NavigationManager

<PageTitle>SSSKLv2 | Saldo opwaarderen</PageTitle>

<div class="row crud-form-header">
    <div class="col-md-9 title-container">
        <h1>Saldo opwaarderen</h1>
    </div>
    <div class="col-md-3 text-end back-container">
        <a class="btn btn-lg btn-secondary" href="/admin/topups"><i class="bi bi-arrow-left"></i> Terug</a>
    </div>
</div>
<hr />
<div class="card">
    <div class="card-body">
        <h5 class="card-title">Saldo Transactie</h5>
        <hr/>
        <div class="row">
            <div class="col-md-4">
                <EditForm method="post" Model="TopUp" OnValidSubmit="AddTopUp" FormName="create" Enhance>
                    <DataAnnotationsValidator />
                    <ValidationSummary class="text-danger" />
                    <div class="mb-3">
                        <label class="form-label" for="usersSelect">Wie wil je opwaarderen?</label>
                        <InputSelect @bind-Value="TopUp.UserId" class="form-select" id="usersSelect">
                            <option value="" selected>Selecteer een gebruiker</option>
                            @foreach (var user in Users)
                            {
                                <option value="@user.Id">@user.Name @user.Surname</option>
                            }
                        </InputSelect>
                    </div>     
                    <div class="mb-3">
                        <label for="price" class="form-label">Hoeveel Saldo?</label> 
                        <div class="input-group">
                            <span class="input-group-text">€</span>
                            <InputNumber id="price" @bind-Value="TopUp.Saldo" class="form-control" /> 
                        </div>
                        <ValidationMessage For="() => TopUp.Saldo" class="text-danger" /> 
                    </div>        
                    <button type="submit" class="btn btn-primary">Opwaarderen</button>
                </EditForm>
            </div>
        </div>
    </div>
</div>

@code {

    [SupplyParameterFromForm]
    public TopUpDto TopUp { get; set; } = new();

    [CascadingParameter]
    private HttpContext HttpContext { get; set; } = default!;

    public IEnumerable<ApplicationUser> Users = new List<ApplicationUser>();
    
    protected override async Task OnInitializedAsync()
    {
        await GetDataAsync();
    }

    private async Task GetDataAsync()
    {
        Users = await ApplicationUserService.GetAllUsers();
    }

    public async Task AddTopUp()
    {
        var user = await ApplicationUserService.GetUserById(TopUp.UserId);
        await TopUpService.CreateTopUp(new TopUp()
        {
            User = user,
            Saldo = TopUp.Saldo
        });
        HeaderService.NotifyHeaderChanged();
        NavigationManager.NavigateTo("/admin/topups");
    }

    public class TopUpDto
    {
        [Required(ErrorMessage = "Selecteer een geldige Gebruiker")]
        [DisplayName("Gebruiker")]
        public string UserId { get; set; }
        [Required(ErrorMessage = "Vul een geldig saldo in")]
        public decimal Saldo { get; set; }
    }
}
