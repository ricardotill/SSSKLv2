@page "/kiosk/orders"
@rendermode InteractiveServer

@attribute [Authorize(Policy = Policies.Kiosk)]

@inject IOrderService OrderService
@using SSSKLv2.Data
@using SSSKLv2.Services.Interfaces
@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Components.QuickGrid
@using SSSKLv2.Components.Account

<PageTitle>SSSKLv2 | Orderbeheer</PageTitle>

<h1>Orderbeheer</h1>

<div class="table-responsive">
    <QuickGrid Items="@Orders" Pagination="@pagination">
        <PropertyColumn Title="Datum" Property="@(o => o.CreatedOn)" Format="dd/MM/yyyy HH:mm" Sortable="true" Align="Align.Left" />
        <TemplateColumn Title="Gebruiker" Context="order">
            @order.User.Name @order.User.Surname.First()
        </TemplateColumn>        
        <PropertyColumn Title="Product" Property="@(o => o.ProductNaam)" Sortable="true" Align="Align.Left" />
        <PropertyColumn Title="Hoeveel" Property="@(o => o.Amount)" Sortable="true" Align="Align.Right" />
        <PropertyColumn Title="Betaald" Property="@(o => o.Paid)" Format="C" Sortable="true" Align="Align.Right" />
        <TemplateColumn Context="order">
            <a class="btn btn-danger btn-sm" href="@($"kiosk/orders/delete?id={order.Id}")" role="button"><i class="bi bi-trash"></i></a>
        </TemplateColumn>
    </QuickGrid>
</div>

<Paginator State="@pagination" />

@code {
    
    public PaginationState pagination = new PaginationState() { ItemsPerPage = 15 };
    
    [CascadingParameter]
    private HttpContext HttpContext { get; set; } = default!;
    
    public IQueryable<Order> Orders = default!;

    protected override async Task OnInitializedAsync()
    {
        await GetDataAsync();
    }

    private async Task GetDataAsync()
    {
        Orders = await OrderService.GetAllQueryable();
    }
}